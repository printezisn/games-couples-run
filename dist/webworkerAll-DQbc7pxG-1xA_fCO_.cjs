"use strict";const s=require("./index-BJwiKbxy.cjs"),_=require("./colorToUniform-Cu0xVW3l-D2qQxRLC.cjs");class Z{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:n}=this._resizeTo;t=i,r=n}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Z.extension=s.D.Application;class ee{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,s.dr.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?s.we.shared:new s.we,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}ee.extension=s.D.Application;class te{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}te.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"filter"};const Pe=new s.H;function Me(a,e){return e.clear(),re(a,e),e.isValid||e.set(0,0,0,0),a.renderGroup?e.applyMatrix(a.renderGroup.localTransform):e.applyMatrix(a.parentRenderGroup.worldTransform),e}function re(a,e){if(a.localDisplayStatus!==7||!a.measurable)return;const t=!!a.effects.length;let r=e;if((a.renderGroup||t)&&(r=s.Si.get().clear()),a.boundsArea)e.addRect(a.boundsArea,a.worldTransform);else{if(a.renderPipeId){const n=a.bounds;r.addFrame(n.minX,n.minY,n.maxX,n.maxY,a.groupTransform)}const i=a.children;for(let n=0;n<i.length;n++)re(i[n],r)}if(t){let i=!1;for(let n=0;n<a.effects.length;n++)a.effects[n].addBounds&&(i||(i=!0,r.applyMatrix(a.parentRenderGroup.worldTransform)),a.effects[n].addBounds(r,!0));i&&(r.applyMatrix(a.parentRenderGroup.worldTransform.copyTo(Pe).invert()),e.addBounds(r,a.relativeGroupTransform)),e.addBounds(r),s.Si.return(r)}else a.renderGroup&&(e.addBounds(r,a.relativeGroupTransform),s.Si.return(r))}function ke(a,e){e.clear();const t=e.matrix;for(let r=0;r<a.length;r++){const i=a[r];i.globalDisplayStatus<7||(e.matrix=i.worldTransform,i.addBounds(e))}return e.matrix=t,e}const De=new s.qf({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class ie{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new s.Dl({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new s.zs({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var t;const r=this.renderer,i=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const n=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,i.length===0){n.skip=!0;return}const o=n.bounds;e.renderables?ke(e.renderables,o):e.filterEffect.filterArea?(o.clear(),o.addRect(e.filterEffect.filterArea),o.applyMatrix(e.container.worldTransform)):Me(e.container,o);const d=r.renderTarget.renderTarget.colorTexture.source;let u=1/0,c=0,l=!0,h=!1,p=!1,f=!0;for(let m=0;m<i.length;m++){const g=i[m];if(u=Math.min(u,g.resolution==="inherit"?d._resolution:g.resolution),c+=g.padding,g.antialias==="off"?l=!1:g.antialias==="inherit"&&l&&(l=d.antialias),g.clipToViewport||(f=!1),!(g.compatibleRenderers&r.type)){p=!1;break}if(g.blendRequired&&!(((t=r.backBuffer)==null?void 0:t.useBackBuffer)??!0)){s.ct("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),p=!1;break}p=g.enabled||p,h=h||g.blendRequired}if(!p){n.skip=!0;return}if(o.scale(u),f){const m=r.renderTarget.rootViewPort;o.fitBounds(0,m.width,0,m.height)}if(o.ceil().scale(1/u).pad(c|0),!o.isPositive){n.skip=!0;return}n.skip=!1,n.bounds=o,n.blendRequired=h,n.container=e.container,n.filterEffect=e.filterEffect,n.previousRenderSurface=r.renderTarget.renderSurface,n.inputTexture=_.k.getOptimalTexture(o.width,o.height,u,l),r.renderTarget.bind(n.inputTexture,!0),r.globalUniforms.push({offset:o})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,i=t.bounds;let n=s.W.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const d=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,u=e.renderTarget.getRenderTarget(t.previousRenderSurface);n=this.getBackTexture(u,i,d)}t.backTexture=n;const o=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(n.source,3),e.globalUniforms.pop(),o.length===1)o[0].apply(this,r,t.previousRenderSurface,!1),_.k.returnTexture(r);else{let d=t.inputTexture,u=_.k.getOptimalTexture(i.width,i.height,d.source._resolution,!1),c=0;for(c=0;c<o.length-1;++c){o[c].apply(this,d,u,!0);const l=d;d=u,u=l}o[c].apply(this,d,t.previousRenderSurface,!1),_.k.returnTexture(d),_.k.returnTexture(u)}t.blendRequired&&_.k.returnTexture(n)}getBackTexture(e,t,r){const i=e.colorTexture.source._resolution,n=_.k.getOptimalTexture(t.width,t.height,i,!1);let o=t.minX,d=t.minY;r&&(o-=r.minX,d-=r.minY),o=Math.floor(o*i),d=Math.floor(d*i);const u=Math.ceil(t.width*i),c=Math.ceil(t.height*i);return this.renderer.renderTarget.copyToTexture(e,n,{x:o,y:d},{width:u,height:c},{x:0,y:0}),n}applyFilter(e,t,r,i){const n=this.renderer,o=this._filterStack[this._filterStackIndex],d=o.bounds,u=s.At.shared,c=o.previousRenderSurface===r;let l=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,h=this._filterStackIndex-1;for(;h>0&&this._filterStack[h].skip;)--h;h>0&&(l=this._filterStack[h].inputTexture.source._resolution);const p=this._filterGlobalUniforms,f=p.uniforms,m=f.uOutputFrame,g=f.uInputSize,x=f.uInputPixel,b=f.uInputClamp,S=f.uGlobalFrame,y=f.uOutputTexture;if(c){let T=this._filterStackIndex;for(;T>0;){T--;const C=this._filterStack[this._filterStackIndex-1];if(!C.skip){u.x=C.bounds.minX,u.y=C.bounds.minY;break}}m[0]=d.minX-u.x,m[1]=d.minY-u.y}else m[0]=0,m[1]=0;m[2]=t.frame.width,m[3]=t.frame.height,g[0]=t.source.width,g[1]=t.source.height,g[2]=1/g[0],g[3]=1/g[1],x[0]=t.source.pixelWidth,x[1]=t.source.pixelHeight,x[2]=1/x[0],x[3]=1/x[1],b[0]=.5*x[2],b[1]=.5*x[3],b[2]=t.frame.width*g[2]-.5*x[2],b[3]=t.frame.height*g[3]-.5*x[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;S[0]=u.x*l,S[1]=u.y*l,S[2]=w.source.width*l,S[3]=w.source.height*l;const R=this.renderer.renderTarget.getRenderTarget(r);if(n.renderTarget.bind(r,!!i),r instanceof s.W?(y[0]=r.frame.width,y[1]=r.frame.height):(y[0]=R.width,y[1]=R.height),y[2]=R.isRoot?-1:1,p.update(),n.renderPipes.uniformBatch){const T=n.renderPipes.uniformBatch.getUboResource(p);this._globalFilterBindGroup.setResource(T,0)}else this._globalFilterBindGroup.setResource(p,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,n.encoder.draw({geometry:De,shader:e,state:e._state,topology:"triangle-list"}),n.type===s._r.WEBGL&&n.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new s.me,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,i=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),n=t.worldTransform.copyTo(s.H.shared);return n.invert(),i.prepend(n),i.scale(1/t.texture.frame.width,1/t.texture.frame.height),i.translate(t.anchor.x,t.anchor.y),i}}ie.extension={type:[s.D.WebGLSystem,s.D.WebGPUSystem],name:"filter"};const se=class ae extends s.qf{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(s.$(s.j,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...ae.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),i=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),n=t.indices||new Uint32Array([0,1,2,0,2,3]),o=t.shrinkBuffersToFit,d=new s.ls({data:r,label:"attribute-mesh-positions",shrinkToFit:o,usage:s.Rt.VERTEX|s.Rt.COPY_DST}),u=new s.ls({data:i,label:"attribute-mesh-uvs",shrinkToFit:o,usage:s.Rt.VERTEX|s.Rt.COPY_DST}),c=new s.ls({data:n,label:"index-mesh-buffer",shrinkToFit:o,usage:s.Rt.INDEX|s.Rt.COPY_DST});super({attributes:{aPosition:{buffer:d,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:u,format:"float32x2",stride:2*4,offset:0}},indexBuffer:c,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};se.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let H=se;function Ae(a){const e=a._stroke,t=a._fill,r=[`div { ${[`color: ${s.dt.shared.setValue(t.color).toHex()}`,`font-size: ${a.fontSize}px`,`font-family: ${a.fontFamily}`,`font-weight: ${a.fontWeight}`,`font-style: ${a.fontStyle}`,`font-variant: ${a.fontVariant}`,`letter-spacing: ${a.letterSpacing}px`,`text-align: ${a.align}`,`padding: ${a.padding}px`,`white-space: ${a.whiteSpace==="pre"&&a.wordWrap?"pre-wrap":a.whiteSpace}`,...a.lineHeight?[`line-height: ${a.lineHeight}px`]:[],...a.wordWrap?[`word-wrap: ${a.breakWords?"break-all":"break-word"}`,`max-width: ${a.wordWrapWidth}px`]:[],...e?[oe(e)]:[],...a.dropShadow?[ne(a.dropShadow)]:[],...a.cssOverrides].join(";")} }`];return He(a.tagStyles,r),r.join(" ")}function ne(a){const e=s.dt.shared.setValue(a.color).setAlpha(a.alpha).toHexa(),t=Math.round(Math.cos(a.angle)*a.distance),r=Math.round(Math.sin(a.angle)*a.distance),i=`${t}px ${r}px`;return a.blur>0?`text-shadow: ${i} ${a.blur}px ${e}`:`text-shadow: ${i} ${e}`}function oe(a){return[`-webkit-text-stroke-width: ${a.width}px`,`-webkit-text-stroke-color: ${s.dt.shared.setValue(a.color).toHex()}`,`text-stroke-width: ${a.width}px`,`text-stroke-color: ${s.dt.shared.setValue(a.color).toHex()}`,"paint-order: stroke"].join(";")}const E={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},I={fill:a=>`color: ${s.dt.shared.setValue(a).toHex()}`,breakWords:a=>`word-wrap: ${a?"break-all":"break-word"}`,stroke:oe,dropShadow:ne};function He(a,e){for(const t in a){const r=a[t],i=[];for(const n in r)I[n]?i.push(I[n](r[n])):E[n]&&i.push(E[n].replace("{{VALUE}}",r[n]));e.push(`${t} { ${i.join(";")} }`)}}class F extends s.ii{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=s.mp(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new F({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Ae(this)),this._cssStyle}addOverride(...e){const t=e.filter(r=>!this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides.push(...t),this.update())}removeOverride(...e){const t=e.filter(r=>this.cssOverrides.includes(r));t.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!t.includes(r)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&s.ct("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&s.ct("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const L="http://www.w3.org/2000/svg",$="http://www.w3.org/1999/xhtml";class de{constructor(){this.svgRoot=document.createElementNS(L,"svg"),this.foreignObject=document.createElementNS(L,"foreignObject"),this.domElement=document.createElementNS($,"div"),this.styleElement=document.createElementNS($,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:i}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(i)}}let X;function Fe(a,e,t,r){r=r||X||(X=new de);const{domElement:i,styleElement:n,svgRoot:o}=r;i.innerHTML=`<style>${e.cssStyle};</style><div style='padding:0'>${a}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(n.textContent=t),document.body.appendChild(o);const d=i.getBoundingClientRect();o.remove();const u=e.padding*2;return{width:d.width-u,height:d.height-u}}class ue{constructor(e,t){this.state=_.w.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],i=this.renderer.graphicsContext.updateGpuContext(t);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e.didViewUpdate&&this._rebuild(e),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const i=t[r];i._batcher.updateElement(i)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=i.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,_.v(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(e);for(let n=0;n<i.length;n++){const o=i[n];r.addToBatch(o,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),i=this.renderer._roundPixels|e._roundPixels,n=r.batches.map(o=>{const d=s.Se.get(s.ah);return o.copyTo(d),d.renderable=e,d.roundPixels=i,d});return this._graphicsBatchesHash[e.uid]===void 0&&e.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[e.uid]=n,n}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{s.Se.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}ue.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"graphics"};const le=class he extends H{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(s.$(s.j,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...he.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],i=[],n=[],o=this.verticesX-1,d=this.verticesY-1,u=this.width/o,c=this.height/d;for(let h=0;h<t;h++){const p=h%this.verticesX,f=h/this.verticesX|0;r.push(p*u,f*c),i.push(p/o,f/d)}const l=o*d;for(let h=0;h<l;h++){const p=h%o,f=h/o|0,m=f*this.verticesX+p,g=f*this.verticesX+p+1,x=(f+1)*this.verticesX+p,b=(f+1)*this.verticesX+p+1;n.push(m,g,x,g,b,x)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(n),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};le.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let Ge=le;class G{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get uvs(){const e=this.geometry.getBuffer("aUV"),t=e.data;let r=t;const i=this.texture.textureMatrix;return i.isSimple||(r=this._transformedUvs,(this._textureMatrixUpdateId!==i._updateID||this._uvUpdateId!==e._updateID)&&((!r||r.length<t.length)&&(r=this._transformedUvs=new Float32Array(t.length)),this._textureMatrixUpdateId=i._updateID,this._uvUpdateId=e._updateID,i.multiplyUvs(t,r))),r}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class ce{constructor(e,t){this.localUniforms=new s.Dl({uTransformMatrix:{value:new s.H,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new s.zs({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=e,this._adaptor=t,this._adaptor.init(),e.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),e.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,i=e.batched;if(t.batched=i,r!==i)return!0;if(i){const n=e._geometry;if(n.indices.length!==t.indexSize||n.positions.length!==t.vertexSize)return t.indexSize=n.indices.length,t.vertexSize=n.positions.length,!0;const o=this._getBatchableMesh(e),d=e.texture;if(o.texture._source!==d._source&&o.texture._source!==d._source)return!o._batcher.checkAndUpdateTexture(o,d)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(e);if(i){const n=this._getBatchableMesh(e);n.texture=e._texture,n.geometry=e._geometry,r.addToBatch(n,t)}else r.break(t),t.add(e)}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t._batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(s.Se.return(t),this._gpuBatchableMeshHash[e.uid]=null),e.off("destroyed",this._destroyRenderableBound)}execute(e){if(!e.isRenderable)return;e.state.blendMode=s.sa(e.groupBlendMode,e.texture._source);const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),_.v(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",this._destroyRenderableBound),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=s.Se.get(G);return t.renderable=e,t.texture=e._texture,t.transform=e.groupTransform,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&s.Se.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}ce.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"mesh"};class ze{execute(e,t){const r=e.state,i=e.renderer,n=t.shader||e.defaultShader;n.resources.uTexture=t.texture._source,n.resources.uniforms=e.localUniforms;const o=i.gl,d=e.getBuffers(t);i.shader.bind(n),i.state.set(r),i.geometry.bind(d.geometry,n.glProgram);const u=d.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?o.UNSIGNED_SHORT:o.UNSIGNED_INT;o.drawElements(o.TRIANGLES,t.particleChildren.length*6,u,0)}}class We{execute(e,t){const r=e.renderer,i=t.shader||e.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(e.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(t.texture);const n=e.state,o=e.getBuffers(t);r.encoder.draw({geometry:o.geometry,shader:t.shader||e.defaultShader,state:n,size:t.particleChildren.length*6})}}function Y(a,e=null){const t=a*6;if(t>65535?e=e||new Uint32Array(t):e=e||new Uint16Array(t),e.length!==t)throw new Error(`Out buffer length is incorrect, got ${e.length} and expected ${t}`);for(let r=0,i=0;r<t;r+=6,i+=4)e[r+0]=i+0,e[r+1]=i+1,e[r+2]=i+2,e[r+3]=i+0,e[r+4]=i+2,e[r+5]=i+3;return e}function Oe(a){return{dynamicUpdate:j(a,!0),staticUpdate:j(a,!1)}}function j(a,e){const t=[];t.push(`
      
        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const n in a){const o=a[n];if(e!==o.dynamic)continue;t.push(`offset = index + ${r}`),t.push(o.code);const d=s.qu(o.format);r+=d.stride/4}t.push(`
            index += stride * 4;
        }
    `),t.unshift(`
        var stride = ${r};
    `);const i=t.join(`
`);return new Function("ps","f32v","u32v",i)}class Ve{constructor(e){this._size=0,this._generateParticleUpdateCache={};const t=this._size=e.size??1e3,r=e.properties;let i=0,n=0;for(const l in r){const h=r[l],p=s.qu(h.format);h.dynamic?n+=p.stride:i+=p.stride}this._dynamicStride=n/4,this._staticStride=i/4,this.staticAttributeBuffer=new s.ea(t*4*i),this.dynamicAttributeBuffer=new s.ea(t*4*n),this.indexBuffer=Y(t);const o=new s.qf;let d=0,u=0;this._staticBuffer=new s.ls({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:s.Rt.VERTEX|s.Rt.COPY_DST}),this._dynamicBuffer=new s.ls({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:s.Rt.VERTEX|s.Rt.COPY_DST});for(const l in r){const h=r[l],p=s.qu(h.format);h.dynamic?(o.addAttribute(h.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:d*4,format:h.format}),d+=p.size):(o.addAttribute(h.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:u*4,format:h.format}),u+=p.size)}o.addIndex(this.indexBuffer);const c=this.getParticleUpdate(r);this._dynamicUpload=c.dynamicUpdate,this._staticUpload=c.staticUpdate,this.geometry=o}getParticleUpdate(e){const t=Ee(e);return this._generateParticleUpdateCache[t]?this._generateParticleUpdateCache[t]:(this._generateParticleUpdateCache[t]=this.generateParticleUpdate(e),this._generateParticleUpdateCache[t])}generateParticleUpdate(e){return Oe(e)}update(e,t){e.length>this._size&&(t=!0,this._size=Math.max(e.length,this._size*1.5|0),this.staticAttributeBuffer=new s.ea(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new s.ea(this._size*this._dynamicStride*4*4),this.indexBuffer=Y(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(e,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,e.length*this._dynamicStride*4,!0),t){const i=this.staticAttributeBuffer;this._staticUpload(e,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,e.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function Ee(a){const e=[];for(const t in a){const r=a[t];e.push(t,r.code,r.dynamic?"d":"s")}return e.join("_")}var Ie=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,Le=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = aColor * uColor;
}
`,q=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

  return VSOutput(
   position,
   aUV,
   aColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class $e extends s.to{constructor(){const e=s.Rl.from({vertex:Le,fragment:Ie}),t=s.fn.from({fragment:{source:q,entryPoint:"mainFragment"},vertex:{source:q,entryPoint:"mainVertex"}});super({glProgram:e,gpuProgram:t,resources:{uTexture:s.W.WHITE.source,uSampler:new s.eu({}),uniforms:{uTranslationMatrix:{value:new s.H,type:"mat3x3<f32>"},uColor:{value:new s.dt(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class pe{constructor(e,t){this.state=_.w.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new s.Dl({uTranslationMatrix:{value:new s.H,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=e,this.adaptor=t,this.defaultShader=new $e,this.state=_.w.for2d()}validateRenderable(e){return!1}addRenderable(e,t){this.renderer.renderPipes.batch.break(t),t.add(e)}getBuffers(e){return this._gpuBufferHash[e.uid]||this._initBuffer(e)}_initBuffer(e){return this._gpuBufferHash[e.uid]=new Ve({size:e.particleChildren.length,properties:e._properties}),e.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[e.uid]}updateRenderable(e){}destroyRenderable(e){this._gpuBufferHash[e.uid].destroy(),this._gpuBufferHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}execute(e){const t=e.particleChildren;if(t.length===0)return;const r=this.renderer,i=this.getBuffers(e);e.texture||(e.texture=t[0].texture);const n=this.state;i.update(t,e._childrenDirty),e._childrenDirty=!1,n.blendMode=s.sa(e.blendMode,e.texture._source);const o=this.localUniforms.uniforms,d=o.uTranslationMatrix;e.worldTransform.copyTo(d),d.prepend(r.globalUniforms.globalUniformData.projectionMatrix),o.uResolution=r.globalUniforms.globalUniformData.resolution,o.uRound=r._roundPixels|e._roundPixels,_.v(e.groupColorAlpha,o.uColor,0),this.adaptor.execute(this,e)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class fe extends pe{constructor(e){super(e,new ze)}}fe.extension={type:[s.D.WebGLPipes],name:"particle"};class ge extends pe{constructor(e){super(e,new We)}}ge.extension={type:[s.D.WebGPUPipes],name:"particle"};const me=class xe extends Ge{constructor(e={}){e={...xe.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,i=this._topHeight+this._bottomHeight,n=this.height>i?1:this.height/i,o=Math.min(r,n);e[9]=e[11]=e[13]=e[15]=this._topHeight*o,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*o,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*o,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*o,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};me.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Xe=me;class _e{constructor(e){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r._batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];s.Se.return(t.geometry),s.Se.return(t),this._gpuSpriteHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(e,t){t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=s.Se.get(G);return t.geometry=s.Se.get(Xe),t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.didViewUpdate||this._updateBatchableSprite(e,t),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}_e.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"nineSliceSprite"};const Ye={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},je={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let M,k;class qe extends s.to{constructor(){M??(M=s.pd({name:"tiling-sprite-shader",bits:[_.m,Ye,s.Sd]})),k??(k=s.md({name:"tiling-sprite-shader",bits:[_.O,je,s.Ad]}));const e=new s.Dl({uMapCoord:{value:new s.H,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new s.H,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:k,gpuProgram:M,resources:{localUniforms:new s.Dl({uTransformMatrix:{value:new s.H,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:s.W.EMPTY.source,uSampler:s.W.EMPTY.source.style}})}updateUniforms(e,t,r,i,n,o){const d=this.resources.tilingUniforms,u=o.width,c=o.height,l=o.textureMatrix,h=d.uniforms.uTextureTransform;h.set(r.a*u/e,r.b*u/t,r.c*c/e,r.d*c/t,r.tx/e,r.ty/t),h.invert(),d.uniforms.uMapCoord=l.mapCoord,d.uniforms.uClampFrame=l.uClampFrame,d.uniforms.uClampOffset=l.uClampOffset,d.uniforms.uTextureTransform=h,d.uniforms.uSizeAnchor[0]=e,d.uniforms.uSizeAnchor[1]=t,d.uniforms.uSizeAnchor[2]=i,d.uniforms.uSizeAnchor[3]=n,o&&(this.resources.uTexture=o.source,this.resources.uSampler=o.source.style)}}class Ke extends H{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Ne(a,e){const t=a.anchor.x,r=a.anchor.y;e[0]=-t*a.width,e[1]=-r*a.height,e[2]=(1-t)*a.width,e[3]=-r*a.height,e[4]=(1-t)*a.width,e[5]=(1-r)*a.height,e[6]=-t*a.width,e[7]=(1-r)*a.height}function Je(a,e,t,r){let i=0;const n=a.length/e,o=r.a,d=r.b,u=r.c,c=r.d,l=r.tx,h=r.ty;for(t*=e;i<n;){const p=a[t],f=a[t+1];a[t]=o*p+u*f+l,a[t+1]=d*p+c*f+h,t+=e,i++}}function Qe(a,e){const t=a.texture,r=t.frame.width,i=t.frame.height;let n=0,o=0;a._applyAnchorToTexture&&(n=a.anchor.x,o=a.anchor.y),e[0]=e[6]=-n,e[2]=e[4]=1-n,e[1]=e[3]=-o,e[5]=e[7]=1-o;const d=s.H.shared;d.copyFrom(a._tileTransform.matrix),d.tx/=a.width,d.ty/=a.height,d.invert(),d.scale(a.width/r,a.height/i),Je(e,2,0,d)}const B=new Ke;class be{constructor(e){this._state=_.w.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const i=t.canBatch;if(i&&i===r){const{batchableMesh:n}=t;if(n&&n.texture._source!==e.texture._source)return!n._batcher.checkAndUpdateTexture(n,e.texture)}return r!==i}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const i=this._getTilingSpriteData(e),{geometry:n,canBatch:o}=i;if(o){i.batchableMesh||(i.batchableMesh=new G);const d=i.batchableMesh;e.didViewUpdate&&(this._updateBatchableMesh(e),d.geometry=n,d.renderable=e,d.transform=e.groupTransform,d.texture=e._texture),d.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(d,t)}else r.break(t),i.shader||(i.shader=new qe),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,_.v(e.groupColorAlpha,r.uColor,0),this._state.blendMode=s.sa(e.groupBlendMode,e.texture._source),this._renderer.encoder.draw({geometry:B,shader:t,state:this._state})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:i}=t;e.didViewUpdate&&this._updateBatchableMesh(e),i._batcher.updateElement(i)}else if(e.didViewUpdate){const{shader:i}=t;i.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}}destroyRenderable(e){var t;const r=this._getTilingSpriteData(e);r.batchableMesh=null,(t=r.shader)==null||t.destroy(),this._tilingSpriteDataHash[e.uid]=null,e.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new H({indices:B.indices,positions:B.positions.slice(),uvs:B.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,i=e.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),Qe(e,r.uvs),Ne(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let i=!0;return this._renderer.type===s._r.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),t.canBatch}}be.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"tilingSprite"};const Ze={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},et={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},tt={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},rt={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let D,A;class it extends s.to{constructor(){const e=new s.Dl({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new s.H,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=s.Zl();D??(D=s.pd({name:"sdf-shader",bits:[s.gd,s.vd(t),Ze,tt,s.Sd]})),A??(A=s.md({name:"sdf-shader",bits:[s._d,s.wd(t),et,rt,s.Ad]})),super({glProgram:A,gpuProgram:D,resources:{localUniforms:e,batchSamplers:s.Cd(t)}})}}class ye{constructor(e){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);K(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){const t=this._gpuBitmapText[e].context;t.customShader&&(s.Se.return(t.customShader),t.customShader=null),s.Se.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);K(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){const{context:r}=t,i=s.Er.getFont(e.text,e._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=s.Se.get(it)));const n=Array.from(e.text),o=e._style;let d=i.baseLineOffset;const u=s.bp(n,o,i,!0);let c=0;const l=o.padding,h=u.scale;let p=u.width,f=u.height+u.offsetY;o._stroke&&(p+=o._stroke.width/h,f+=o._stroke.width/h),r.translate(-e._anchor._x*p-l,-e._anchor._y*f-l).scale(h,h);const m=i.applyFillAsTint?o._fill.color:16777215;for(let g=0;g<u.lines.length;g++){const x=u.lines[g];for(let b=0;b<x.charPositions.length;b++){const S=n[c++],y=i.chars[S];y!=null&&y.texture&&r.texture(y.texture,m||"black",Math.round(x.charPositions[b]+y.xOffset),Math.round(d+y.yOffset))}d+=i.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=s.Se.get(s.Xe);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,i=s.st.get(`${r}-bitmap`),{a:n,b:o,c:d,d:u}=e.groupTransform,c=Math.sqrt(n*n+o*o),l=Math.sqrt(d*d+u*u),h=(Math.abs(c)+Math.abs(l))/2,p=i.baseRenderedFontSize/e._style.fontSize,f=h*i.distanceField.range*(1/p);t.customShader.resources.localUniforms.uniforms.uDistance=f}destroy(){for(const e in this._gpuBitmapText)this._destroyRenderableByUid(e);this._gpuBitmapText=null,this._renderer=null}}ye.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"bitmapText"};function K(a,e){e.groupTransform=a.groupTransform,e.groupColorAlpha=a.groupColorAlpha,e.groupColor=a.groupColor,e.groupBlendMode=a.groupBlendMode,e.globalDisplayStatus=a.globalDisplayStatus,e.groupTransform=a.groupTransform,e.localDisplayStatus=a.localDisplayStatus,e.groupAlpha=a.groupAlpha,e._roundPixels=a._roundPixels}class ve{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t._batcher.updateElement(t)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),s.Se.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(o=>{console.error(o)}),e._didTextUpdate=!1;const n=e._style.padding;s.su(i.bounds,e._anchor,i.texture,n)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const i=e.resolution??this._renderer.resolution,n=await this._renderer.htmlText.getManagedTexture(e.text,i,e._style,e._getKey()),o=t.batchableSprite;o.texture=t.texture=n,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const d=e._style.padding;s.su(o.bounds,e._anchor,o.texture,d)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:s.W.EMPTY,currentKey:"--",batchableSprite:s.Se.get(_.U),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.transform=e.groupTransform,r.texture=s.W.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._gpuText[e.uid]=t,e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}ve.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"htmlText"};function st(){const{userAgent:a}=s.ot.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(a)}const at=new s.me;function Te(a,e,t,r){const i=at;i.minX=0,i.minY=0,i.maxX=a.width/r|0,i.maxY=a.height/r|0;const n=_.k.getOptimalTexture(i.width,i.height,r,!1);return n.source.uploadMethodId="image",n.source.resource=a,n.source.alphaMode="premultiply-alpha-on-upload",n.frame.width=e/r,n.frame.height=t/r,n.source.emit("update",n.source),n.updateUvs(),n}function nt(a,e){const t=e.fontFamily,r=[],i={},n=/font-family:([^;"\s]+)/g,o=a.match(n);function d(u){i[u]||(r.push(u),i[u]=!0)}if(Array.isArray(t))for(let u=0;u<t.length;u++)d(t[u]);else d(t);o&&o.forEach(u=>{const c=u.split(":")[1].trim();d(c)});for(const u in e.tagStyles){const c=e.tagStyles[u].fontFamily;d(c)}return r}async function ot(a){const e=await(await s.ot.get().fetch(a)).blob(),t=new FileReader;return await new Promise((r,i)=>{t.onloadend=()=>r(t.result),t.onerror=i,t.readAsDataURL(e)})}async function N(a,e){const t=await ot(e);return`@font-face {
        font-family: "${a.fontFamily}";
        src: url('${t}');
        font-weight: ${a.fontWeight};
        font-style: ${a.fontStyle};
    }`}const U=new Map;async function dt(a,e,t){const r=a.filter(i=>s.st.has(`${i}-and-url`)).map((i,n)=>{if(!U.has(i)){const{url:o}=s.st.get(`${i}-and-url`);n===0?U.set(i,N({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:i},o)):U.set(i,N({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:i},o))}return U.get(i)});return(await Promise.all(r)).join(`
`)}function ut(a,e,t,r,i){const{domElement:n,styleElement:o,svgRoot:d}=i;n.innerHTML=`<style>${e.cssStyle}</style><div style='padding:0;'>${a}</div>`,n.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),o.textContent=r;const{width:u,height:c}=i.image;return d.setAttribute("width",u.toString()),d.setAttribute("height",c.toString()),new XMLSerializer().serializeToString(d)}function lt(a,e){const t=s.Aa.getOptimalCanvasAndContext(a.width,a.height,e),{context:r}=t;return r.clearRect(0,0,a.width,a.height),r.drawImage(a,0,0),t}function ht(a,e,t){return new Promise(async r=>{t&&await new Promise(i=>setTimeout(i,100)),a.onload=()=>{r()},a.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,a.crossOrigin="anonymous"})}class z{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===s._r.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const n=this._buildTexturePromise(e,t,r).then(o=>(this._activeTextures[i].texture=o,o));return this._activeTextures[i]={texture:null,promise:n,usageCount:1},n}async _buildTexturePromise(e,t,r){const i=s.Se.get(de),n=nt(e,r),o=await dt(n,r,F.defaultTextStyle),d=Fe(e,r,o,i),u=Math.ceil(Math.ceil(Math.max(1,d.width)+r.padding*2)*t),c=Math.ceil(Math.ceil(Math.max(1,d.height)+r.padding*2)*t),l=i.image,h=2;l.width=(u|0)+h,l.height=(c|0)+h;const p=ut(e,r,t,o,i);await ht(l,p,st()&&n.length>0);const f=l;let m;this._createCanvas&&(m=lt(l,t));const g=Te(m?m.canvas:f,l.width-h,l.height-h,t);return this._createCanvas&&(this._renderer.texture.initSource(g.source),s.Aa.returnCanvasAndContext(m)),s.Se.return(i),g}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{s.ct("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){_.k.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}z.extension={type:[s.D.WebGLSystem,s.D.WebGPUSystem,s.D.CanvasSystem],name:"htmlText"};z.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class Se{constructor(e){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=e,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const e in this._gpuText){const t=this._gpuText[e];if(!t)continue;const r=t.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.currentKey!==r}addRenderable(e,t){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),t._batcher.updateElement(t)}destroyRenderable(e){e.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),s.Se.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),i=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const n=e._style.padding;s.su(i.bounds,e._anchor,i.texture,n)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey),t.texture=r.texture=this._renderer.canvasText.getManagedTexture(e),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:s.Se.get(_.U)};return t.batchableSprite.renderable=e,t.batchableSprite.transform=e.groupTransform,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e._resolution=e._autoResolution?this._renderer.resolution:e.resolution,this._updateText(e),e.on("destroyed",this._destroyRenderableBound),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Se.extension={type:[s.D.WebGLPipes,s.D.WebGPUPipes,s.D.CanvasPipes],name:"text"};function J(a,e,t){for(let r=0,i=4*t*e;r<e;++r,i+=4)if(a[i+3]!==0)return!1;return!0}function Q(a,e,t,r,i){const n=4*e;for(let o=r,d=r*n+4*t;o<=i;++o,d+=n)if(a[d+3]!==0)return!1;return!0}function ct(a,e=1){const{width:t,height:r}=a,i=a.getContext("2d",{willReadFrequently:!0});if(i===null)throw new TypeError("Failed to get canvas 2D context");const n=i.getImageData(0,0,t,r).data;let o=0,d=0,u=t-1,c=r-1;for(;d<r&&J(n,t,d);)++d;if(d===r)return s.ft.EMPTY;for(;J(n,t,c);)--c;for(;Q(n,t,o,d,c);)++o;for(;Q(n,t,u,d,c);)--u;return++u,++c,new s.ft(o/e,d/e,(u-o)/e,(c-d)/e)}class we{constructor(e){this._activeTextures={},this._renderer=e}getTextureSize(e,t,r){const i=s.kr.measureText(e||" ",r);let n=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t);return n=Math.ceil(n-1e-6),o=Math.ceil(o-1e-6),n=s.Ro(n),o=s.Ro(o),{width:n,height:o}}getTexture(e,t,r,i){typeof e=="string"&&(s.$("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),e={text:e,style:r,resolution:t}),e.style instanceof s.ii||(e.style=new s.ii(e.style));const{texture:n,canvasAndContext:o}=this.createTextureAndCanvas(e);return this._renderer.texture.initSource(n._source),s.Aa.returnCanvasAndContext(o),n}createTextureAndCanvas(e){const{text:t,style:r}=e,i=e.resolution??this._renderer.resolution,n=s.kr.measureText(t||" ",r),o=Math.ceil(Math.ceil(Math.max(1,n.width)+r.padding*2)*i),d=Math.ceil(Math.ceil(Math.max(1,n.height)+r.padding*2)*i),u=s.Aa.getOptimalCanvasAndContext(o,d),{canvas:c}=u;this.renderTextToCanvas(t,r,i,u);const l=Te(c,o,d,i);if(r.trim){const h=ct(c,i);l.frame.copyFrom(h),l.updateUvs()}return{texture:l,canvasAndContext:u}}getManagedTexture(e){e._resolution=e._autoResolution?this._renderer.resolution:e.resolution;const t=e._getKey();if(this._activeTextures[t])return this._increaseReferenceCount(t),this._activeTextures[t].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(e);return this._activeTextures[t]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){s.Aa.returnCanvasAndContext(t.canvasAndContext),_.k.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,i){var n,o,d,u;const{canvas:c,context:l}=i,h=s.Tr(t),p=s.kr.measureText(e||" ",t),f=p.lines,m=p.lineHeight,g=p.lineWidths,x=p.maxLineWidth,b=p.fontProperties,S=c.height;if(l.resetTransform(),l.scale(r,r),l.textBaseline=t.textBaseline,(n=t._stroke)!=null&&n.width){const T=t._stroke;l.lineWidth=T.width,l.miterLimit=T.miterLimit,l.lineJoin=T.join,l.lineCap=T.cap}l.font=h;let y,w;const R=t.dropShadow?2:1;for(let T=0;T<R;++T){const C=t.dropShadow&&T===0,P=C?Math.ceil(Math.max(1,S)+t.padding*2):0,Ce=P*r;if(C){l.fillStyle="black",l.strokeStyle="black";const v=t.dropShadow,Re=v.color,Be=v.alpha;l.shadowColor=s.dt.shared.setValue(Re).setAlpha(Be).toRgbaString();const Ue=v.blur*r,V=v.distance*r;l.shadowBlur=Ue,l.shadowOffsetX=Math.cos(v.angle)*V,l.shadowOffsetY=Math.sin(v.angle)*V+Ce}else l.fillStyle=t._fill?s.Ca(t._fill,l):null,(o=t._stroke)!=null&&o.width&&(l.strokeStyle=s.Ca(t._stroke,l)),l.shadowColor="black";let W=(m-b.fontSize)/2;m-b.fontSize<0&&(W=0);const O=((d=t._stroke)==null?void 0:d.width)??0;for(let v=0;v<f.length;v++)y=O/2,w=O/2+v*m+b.ascent+W,t.align==="right"?y+=x-g[v]:t.align==="center"&&(y+=(x-g[v])/2),(u=t._stroke)!=null&&u.width&&this._drawLetterSpacing(f[v],t,i,y+t.padding,w+t.padding-P,!0),t._fill!==void 0&&this._drawLetterSpacing(f[v],t,i,y+t.padding,w+t.padding-P)}}_drawLetterSpacing(e,t,r,i,n,o=!1){const{context:d}=r,u=t.letterSpacing;let c=!1;if(s.kr.experimentalLetterSpacingSupported&&(s.kr.experimentalLetterSpacing?(d.letterSpacing=`${u}px`,d.textLetterSpacing=`${u}px`,c=!0):(d.letterSpacing="0px",d.textLetterSpacing="0px")),u===0||c){o?d.strokeText(e,i,n):d.fillText(e,i,n);return}let l=i;const h=s.kr.graphemeSegmenter(e);let p=d.measureText(e).width,f=0;for(let m=0;m<h.length;++m){const g=h[m];o?d.strokeText(g,l,n):d.fillText(g,l,n);let x="";for(let b=m+1;b<h.length;++b)x+=h[b];f=d.measureText(x).width,l+=p-f+u,p=f}}destroy(){this._activeTextures=null}}we.extension={type:[s.D.WebGLSystem,s.D.WebGPUSystem,s.D.CanvasSystem],name:"canvasText"};s.Ct.add(Z);s.Ct.add(ee);s.Ct.add(ue);s.Ct.add(s.hh);s.Ct.add(ce);s.Ct.add(fe);s.Ct.add(ge);s.Ct.add(we);s.Ct.add(Se);s.Ct.add(ye);s.Ct.add(z);s.Ct.add(ve);s.Ct.add(be);s.Ct.add(_e);s.Ct.add(ie);s.Ct.add(te);
